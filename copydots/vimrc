" vim:filetype=vim

" vim behaves like vim and not vi
set nocompatible

call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

syntax on
if has("autocmd")
    filetype plugin indent on
endif

" display status bar
set laststatus=2
" display line and char count in status bar
set ruler
" display line numbers
set number
" allow buffers to exist without being written to disk
set hidden
set encoding=utf-8
" highlight search terms; :noh to clear
set hlsearch
" interactively search for expression
set incsearch
" smoother redraw for faster terms
set ttyfast
" faster escape into modes
set timeoutlen=300
set ttimeoutlen=50
" let OS decide when to sync
set nofsync
" don't need weird redraw times
set lazyredraw
" minimum number of lines to display around the curser line
set scrolloff=3
set sidescrolloff=3
" sane defaults for windows splits
set splitbelow
set splitright
" mouse in normal and visual mode
set mouse=nv
" Hide mouse when typing
set mousehide
" backspace works like normal
set backspace=indent,eol,start
" use system clipboard
set clipboard=unnamed
" commandline history
set history=1000
" allow modelines to be used; for files that have to declare their type as a
" comment
set modeline
" switch to a window in which a buffer is already open
set switchbuf=useopen
" for spell checking
set spelllang=eng_US
set dictionary+=/usr/share/dict/words
" TODO: sane viminfo defaults
set viminfo+=n"$VIM/viminfo"
" character to show if a line is wrapped
set showbreak=↪

set background=dark
colorscheme base16-monokai
" force 256 term
set t_Co=256

" Highlight VCS conflict markers
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'
" Mark past 80 columns
if exists('+colorcolumn')
  set colorcolumn=81
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>81v.\+', -1)
endif

" TODO: LESS PINKIE HURT!!!!
" undo?
" if has("persistant_undo")
"   set undofile
"   set undolevel=1000
" endif
" set autowriteall
" set autoread

" Find files recusively in current directory
set path+=**
" Don't have to look for suffixes in find
set suffixesadd=.rb,.py,.coffee,.js,.sh,.sass,.scss,.html,.erb,.css,.java,.C
set suffixesadd+=.cc,.CPP,.cxx,.c++,.cpp,.H,.hh,.HPP,.hxx,.h++,.hpp,.tcc,.c,.h
set suffixesadd+=.s,.S

" Hidden tags file
set tags+=.tags;

" wildmenu setup (tab completion with a builtin popup menu)
" the wildmenu is a single line
" wildmode is semi-fuzzy matching
if has("wildmenu")
    " Compiled files
    set wildignore+=*.a,*.o
    set wildignore+=*.class,*.pyc
    " Images
    set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png
    " VCS stuff
    set wildignore+=.git,.hg,.svn
    " temperary files and tags files
    set wildignore+=*~,*.swp,*.tmp,.tags,tags
    " LaTeX crap
    set wildignore+=*.log,*.aux,*.dvi,*.aut,*.bbl,*.blg,*.fff,*.out,*.pdf,*.ps
    set wildignore+=*.toc,*.ttt

    set wildmenu
    set wildmode=longest:full,full
endif

" rss is xml
if has("autocmd")
  autocmd BufNewFile,BufRead *.rss setfiletype xml
  autocmd BufNewFile,BufRead *.json setfiletype javascript
endif

let g:ctrlp_cmd = "CtrlPMixed"
let g:delimitMate_offByDefault = 1

" syntastic good configs
let g:syntastic_aggregate_errors = 1
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_python_pylint_exe = "pylint"
let g:syntastic_error_symbol = '✗'
let g:syntastic_warning_symbol = '⚠'
let g:syntastic_style_error_symbol = '⚡'
let g:syntastic_style_warning_symbol = '⚡'
let g:syntastic_check_on_open=1

" netrw treeview
let g:netrw_liststyle = 3

" for textobj-rubyblock
runtime macros/matchit.vim

" Plugin TODO:
" vim-signature " <- show marks next to line numbers
" tpope/vim-vinegar.git
" Shougo/unite.vim " depends on Shougo/vimproc.vim
" youcompleteme
" unit plugins?
" vimez/vim-tmux or zepto/unite-tmux or vim-tmux-navigator
" majutsushi/tagbar
" elera/vim-javascript-syntax
" pangloss/vim-javascript
" marijnh/tern_for_vim " <- awesome js linter/checker/parser
" let g:rubycomplete_buffer_loading=1
" let g:rubycomplete_classes_in_global=1
" let g:rubycomplete_rails=1
